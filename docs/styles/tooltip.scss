.tooltip-host {
  // Layout.
  position: relative;
}

// Inline elements that are likely to be used inside paragraphs should be set to
// inline-block when used with `sf-tooltip`. Tooltip relies on element's
// position and assumes it to be a small block. Inline elements are unique: they
// wrap on linebreaks, distoring the tooltip's position. This gets even worse if
// the inline element contains a blocky element. This rule fixes those issues
// and encourages authors to keep tooltip hosts small.
b, big, i, small, abbr, acronym, cite, code, dfn, em,
kbd, strong, samp, var, a, bdo, q, span, sub, sup {
  &.tooltip-host {
    display: inline-block;
  }
}

.tooltip {
  // Use grayscale negatives of the base text and background colours. If the
  // user adjusts the defaults, the tooltips adjust to the new theme
  // automatically.
  $color-bg: rgba(sf-contrasting-color($sf-color-background), 0.85);
  $color-text: sf-contrasting-color($sf-color-text);

  // Hidden unless the host is activated. Both opacity and visibility are
  // required for animating the transition.
  opacity: 0;
  visibility: hidden;

  /**
   * Shared style for tooltip content and triangle.
   */
  &, &::before {
    // Layout.
    display: block;
    position: absolute;
    z-index: $sf-z-index-tooltip;

    // Animate the transitions.
    @include sf-transitions(all);

    // Use a constant small font size.
    font-size: unquote('#{$sf-tooltip-proportion}rem');

    // Counteract inherited font styles, if any.
    font-style: normal;
    font-weight: $sf-font-weight;
  }

  /**
   * Content-specific styles.
   */
  // Prevent from shrinking to the width or height of the parent.
  white-space: pre;

  // Use a fraction of the standard padding. We scale it down twice as much as
  // other dimensions.
  padding: $sf-space * $sf-tooltip-proportion / 2;

  // Use a fraction of the standard border radius.
  border-radius: $sf-border-radius * $sf-tooltip-proportion;

  // Colours.
  background-color: $color-bg;
  color: $color-text;

  /**
   * Triangle-specific styles.
   */
  &::before {
    content: '';
    // Cosmetic.
    border: $sf-tooltip-offset solid transparent;
  }

  // Never display empty tooltips.
  &:empty {display: none}

  /**
   * Tooltip content and triangle positioning.
   */

  @mixin tooltip-position($main, $cross) {
    $translate: if($main == top or $main == bottom, translateX, translateY);
    $inverse: map-get((
      bottom: top,
      top: bottom,
      left: right,
      right: left
    ), $main);

    #{$main}: 100%;
    margin-#{$main}: $sf-tooltip-offset * 2;
    #{$cross}: 50%;
    transform: unquote('#{$translate}(-50%)');

    &::before {
      // Layout.
      #{$inverse}: 100%;
      margin-#{$main}: 1px; // Fix for a 1px interval that appears in some browsers.
      #{$cross}: 50%;
      margin-#{$cross}: -$sf-tooltip-offset;
      // Border.
      border-#{$inverse}: $sf-tooltip-offset solid $color-bg;
    }
  }

  // Top (default).
  &:not([class*=sf-position]), &.sf-position-top {
    @include tooltip-position(bottom, left);
  }

  // Right.
  &.sf-position-right {
    @include tooltip-position(left, top);
  }

  // Bottom.
  &.sf-position-bottom {
    @include tooltip-position(top, left);
  }

  // Left.
  &.sf-position-left {
    @include tooltip-position(right, top);
  }

  /**
   * Triggered state styles. In the absence of a trigger attribute, the
   * tooltip is triggered by hovering the host. Trigger indicators may be
   * combined like so:
   *
   *   <button data-sf-tooltip="tooltip text"
   *           data-sf-trigger="hover focus">hover or focus me</button>
   */
  .tooltip-host:not([data-sf-trigger]):hover &,
  .tooltip-host[data-sf-trigger~=active]:active &,
  .tooltip-host[data-sf-trigger~=disabled]:disabled &,
  .tooltip-host[data-sf-trigger~=focus]:focus &,
  .tooltip-host[data-sf-trigger~=hover]:hover &,
  .tooltip-host[data-sf-trigger~=target]:target &,
  // Unconditional visibility; hook for JavaScript enhancement.
  .tooltip-host.sf-tooltip-visible & {
    opacity: initial;
    visibility: inherit;
  }
}
